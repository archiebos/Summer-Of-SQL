-- For the Transaction Path table:
-- Make sure field naming convention matches the other tables
-- i.e. instead of Account_From it should be Account From
-- Filter out the cancelled transactions
-- Split the flow into incoming and outgoing transactions 
-- Bring the data together with the Balance as of 31st Jan 
-- Work out the order that transactions occur for each account
-- Hint: where multiple transactions happen on the same day, assume the highest value transactions happen first
--Use a running sum to calculate the Balance for each account on each day (hint)
--The Transaction Value should be null for 31st Jan, as this is the starting balance

WITH CTE AS (

SELECT 
ACCOUNT_TO AS ACCOUNT_ID,

TRANSACTION_DATE,
VALUE,
BALANCE

 
FROM pd2023_wk07_transaction_detail AS D 

INNER JOIN PD2023_WK07_TRANSACTION_PATH AS P ON D.TRANSACTION_ID=P.TRANSACTION_ID
INNER JOIN PD2023_WK07_ACCOUNT_INFORMATION AS A ON P.ACCOUNT_TO= A.ACCOUNT_NUMBER

where D.cancelled_ <> 'Y' 
AND BALANCE_DATE= '2023-01-31'


UNION ALL

SELECT 
ACCOUNT_FROM AS ACCOUNT_ID,

TRANSACTION_DATE,
VALUE*(-1),
BALANCE

 
FROM pd2023_wk07_transaction_detail AS D 

INNER JOIN PD2023_WK07_TRANSACTION_PATH AS P ON D.TRANSACTION_ID=P.TRANSACTION_ID

INNER JOIN PD2023_WK07_ACCOUNT_INFORMATION AS A ON P.ACCOUNT_FROM= A.ACCOUNT_NUMBER

where D.cancelled_ <> 'Y'
AND BALANCE_DATE= '2023-01-31'

UNION ALL



SELECT 

ACCOUNT_NUMBER AS ACCOUNT_ID,
BALANCE_DATE AS TRANSACTION_DATE,
NULL AS VALUE,
BALANCE

FROM PD2023_WK07_ACCOUNT_INFORMATION)


SELECT 
ACCOUNT_ID, 

TRANSACTION_DATE, 
VALUE, 
BALANCE, 

SUM(COALESCE(VALUE,0)) OVER (PARTITION BY ACCOUNT_ID ORDER BY TRANSACTION_DATE, VALUE DESC) + BALANCE AS RUNNING_SUM_OF_BALANCE


FROM CTE

ORDER BY ACCOUNT_ID, TRANSACTION_DATE, VALUE DESC

;
