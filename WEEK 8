--Input each of the 12 monthly files
--Create a 'file date' using the month found in the file name
--The Null value should be replaced as 1
--Clean the Market Cap value to ensure it is the true value as 'Market Capitalisation'
--Remove any rows with 'n/a'
--Categorise the Purchase Price into groupings

WITH ALL_ AS (
SELECT
'JANUARY' AS FILE_DATE , * FROM PD2023_WK08_01 UNION ALL
SELECT
'FEBRUARY' AS FILE_DATE , * FROM PD2023_WK08_02 UNION ALL
SELECT
'MARCH' AS FILE_DATE , * FROM PD2023_WK08_03 UNION ALL
SELECT
'APRIL' AS FILE_DATE , * FROM PD2023_WK08_04 UNION ALL
SELECT
'MAY' AS FILE_DATE , * FROM PD2023_WK08_05 UNION ALL
SELECT
'JUNE' AS FILE_DATE , * FROM PD2023_WK08_06 UNION ALL
SELECT
'JULY' AS FILE_DATE , * FROM PD2023_WK08_07 UNION ALL
SELECT
'AUGUST' AS FILE_DATE , * FROM PD2023_WK08_08 UNION ALL
SELECT
'SEPTEMBER' AS FILE_DATE , * FROM PD2023_WK08_09 UNION ALL
SELECT
'OCTOBER' AS FILE_DATE , * FROM PD2023_WK08_10 UNION ALL
SELECT
'NOVEMBER' AS FILE_DATE , * FROM PD2023_WK08_11 UNION ALL
SELECT
'DECEMBER' AS FILE_DATE , * FROM PD2023_WK08_12
)

--Categorise the Purchase Price into groupings
--0 to 24,999.99 as 'Low'
--25,000 to 49,999.99 as 'Medium'
--50,000 to 74,999.99 as 'High'
--75,000 to 100,000 as 'Very High'

, ETC AS (
SELECT 
ltrim(Market_Cap,'$') AS Market_Capitalisation,
to_double (ltrim(purchase_price,'$'))as purhcased_price1,

CASE
WHEN CONTAINS(MARKET_CAPITALISATION, 'M') THEN 1000000
WHEN CONTAINS(MARKET_CAPITALISATION, 'B') THEN 1000000000
END AS MULTIPLIER, 

case
when 0<=purhcased_price1 and purhcased_price1<=24999.99 then 'LOW'
WHEN 25000 <=purhcased_price1 AND purhcased_price1<= 49999.99  THEN 'MEDIUM'
WHEN 50000 <=purhcased_price1 AND purhcased_price1<= 74999.99  THEN 'HIGH'
WHEN 75000 <=purhcased_price1 AND purhcased_price1<=100000  THEN 'VERY HIGH'
END AS PURCHASE_GROUP,

--Categorise the Market Cap into groupings
--Below $100M as 'Small'
--Between $100M and below $1B as 'Medium'
--Between $1B and below $100B as 'Large' 
--$100B and above as 'Huge'

* FROM ALL_

WHERE SECTOR <> 'n/a'
AND MARKET_CAPITALISATION <> 'n/a')

, FINAL AS (

SELECT

MULTIPLIER * TO_DOUBLE( LEFT(MARKET_CAPITALISATION, LENGTH(MARKET_CAPITALISATION)-1)) AS MARKET_CAP_VALUE, 


CASE 
WHEN MARKET_CAP_VALUE< 1000000 THEN 'SMALL'
WHEN 1000000<= MARKET_CAP_VALUE AND MARKET_CAP_VALUE<1000000000 THEN 'MEDIUM'
WHEN 1000000000<= MARKET_CAP_VALUE AND MARKET_CAP_VALUE< 1000000000000 THEN 'LARGE'
WHEN 1000000000000>= MARKET_CAP_VALUE THEN 'HUGE'
END
AS MARKET_CAP_GROUP,

--Rank the highest 5 purchases per combination of: file date, Purchase Price Categorisation and Market Capitalisation Categorisation.
--Output only records with a rank of 1 to 5
*

FROM ETC) 

, RANK AS (

SELECT *,

RANK() OVER(PARTITION BY FILE_DATE, PURCHASE_GROUP, MARKET_CAP_GROUP ORDER BY purhcased_price1 DESC) AS RNK



FROM FINAL )

SELECT * FROM RANK


WHERE RNK<=5



;
